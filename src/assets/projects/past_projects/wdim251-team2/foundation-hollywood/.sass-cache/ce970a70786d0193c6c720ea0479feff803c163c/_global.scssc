3.2.13 (Media Mark)
9e90bc98204364444cb538b4480da32e85ac9234
o:Sass::Tree::RootNode
:@template"Ï0// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@import "../functions";
//
// Foundation Variables
//

// Data attribute namespace
// styles get applied to [data-mysite-plugin], etc
$namespace: false !default;

$experimental: true !default;

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it affect the grid breakpoints,
// set $rem-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

//
// Global Foundation Mixins
//

// @mixins
//
// We use this to control border radius.
// $radius - Default: $global-radius || 4px
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// @mixins
//
// We use this to create equal side border radius on elements.
// $side - Options: left, right, top, bottom
@mixin side-radius($side, $radius:$global-radius) {
  @if ($side == left or $side == right) {
    @if $experimental {
      -moz-border-radius-bottom#{$side}: $radius;
      -moz-border-radius-top#{$side}: $radius;
      -webkit-border-bottom-#{$side}-radius: $radius;
      -webkit-border-top-#{$side}-radius: $radius;
    }
    border-bottom-#{$side}-radius: $radius;
    border-top-#{$side}-radius: $radius;
  } @else {
    @if $experimental {
      -moz-border-radius-#{$side}left: $radius;
      -moz-border-radius-#{$side}right: $radius;
      -webkit-border-#{$side}-left-radius: $radius;
      -webkit-border-#{$side}-right-radius: $radius;
    }
    border-#{$side}-left-radius: $radius;
    border-#{$side}-right-radius: $radius;
  }
}

// @mixins
//
// We can control whether or not we have inset shadows edges.
// $active - Default: true, Options: false
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// @mixins
//
// We use this to add transitions to elements
// $property - Default: all, Options: http://www.w3.org/TR/css3-transitions/#animatable-properties
// $speed - Default: 300ms
// $ease - Default:ease-out, Options: http://css-tricks.com/almanac/properties/t/transition-timing-function/
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// @mixins
//
// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// @mixins
//
// We use this to create equilateral triangles
// $triangle-size - Used to set border-size. No default, set a px or em size.
// $triangle-color - Used to set border-color which makes up triangle. No default
// $triangle-direction - Used to determine which direction triangle points. Options: top, bottom, left, right
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

// @mixins
//
// We use this to add a glowing effect to block elements
// $selector - Used for selector state. Default: focus, Options: hover, active, visited
// $fade-time - Default: 300ms
// $glowing-effect-color - Default: fade-out($primary-color, .25)
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

// @mixins
//
// We use this to translate elements in 2D
// $horizontal: Default: 0
// $vertical: Default: 0
@mixin translate2d($horizontal:0, $vertical:0) {
  @if $experimental {
    -webkit-transform: translate($horizontal,$vertical);
    -moz-transform: translate($horizontal,$vertical);
    -ms-transform: translate($horizontal,$vertical);
    -o-transform: translate($horizontal,$vertical);
  }
  transform: translate($horizontal,$vertical)
}

// @mixins
//
// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// @mixins
//
// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  height: auto;
  width: auto;
  overflow: visible;
  clip: auto;
}

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}
// We use these as default colors throughout
$primary-color: #008CBA !default;
$secondary-color: #e7e7e7 !default;
$alert-color: #f04124 !default;
$success-color: #43AC6A !default;
$warning-color: #f08a24 !default;
$info-color: #a0d3e8 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;


// Media Query Ranges
$small-range: (0em, 40em) !default;
$medium-range: (40.063em, 64em) !default;
$large-range: (64.063em, 90em) !default;
$xlarge-range: (90.063em, 120em) !default;
$xxlarge-range: (120.063em, 99999999em) !default;


$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})" !default;

// Legacy
$small: $medium-up;
$medium: $medium-up;
$large: $large-up;


//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@include exports("global") {

  @if $include-html-global-classes {

    meta.foundation-version {
      font-family: "/5.2.0/";
    }
    // Used to provide media query values for javascript components.
    // Forward slash placed around everything to convince PhantomJS to read the value.
    meta.foundation-mq-small {
      font-family: "/" + unquote($small-only) + "/";
      width: lower-bound($small-range);
    }

    meta.foundation-mq-medium {
      font-family: "/" + unquote($medium-up) + "/";
      width: lower-bound($medium-range);
    }

    meta.foundation-mq-large {
      font-family: "/" + unquote($large-up) + "/";
      width: lower-bound($large-range);
    }

    meta.foundation-mq-xlarge {
      font-family: "/" + unquote($xlarge-up) + "/";
      width: lower-bound($xlarge-range);
    }

    meta.foundation-mq-xxlarge {
      font-family: "/" + unquote($xxlarge-up) + "/";
      width: lower-bound($xxlarge-range);
    }

    meta.foundation-data-attribute-namespace {
      font-family: #{$namespace};
    }

    // Must be 100% for off canvas to work
    html, body { height: 100%; }

    // Set box-sizing globally to handle padding and border widths
    *,
    *:before,
    *:after {
      @include box-sizing(border-box);
    }

    html,
    body { font-size: $base-font-size; }

    // Default body styles
    body {
      background: $body-bg;
      color: $body-font-color;
      padding: 0;
      margin: 0;
      font-family: $body-font-family;
      font-weight: $body-font-weight;
      font-style: $body-font-style;
      line-height: 1; // Set to $base-line-height to take on browser default of 150%
      position: relative;
      cursor: $cursor-default-value;
    }

  a:hover { cursor: $cursor-pointer-value; }

    // Grid Defaults to get images and embeds to work properly
    img { max-width: 100%; height: auto; }

    img { -ms-interpolation-mode: bicubic; }

    #map_canvas,
    .map_canvas {
      img,
      embed,
      object { max-width: none !important;
      }
    }

    // Miscellaneous useful HTML classes
    .left   { float: left !important; }
    .right  { float: right !important; }
    .clearfix     { @include clearfix; }
    .hide         { display: none; }

    // Font smoothing
    // Antialiased font smoothing works best for light text on a dark background.
    // Apply to single elements instead of globally to body.
    // Note this only applies to webkit-based desktop browsers and Firefox 25 (and later) on the Mac.
    .antialiased { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

    // Get rid of gap under images by making them display: inline-block; by default
    img {
      display: inline-block;
      vertical-align: middle;
    }

    //
    // Global resets for forms
    //

    // Make sure textarea takes on height automatically
    textarea { height: auto; min-height: 50px; }

    // Make select elements 100% width by default
    select { width: 100%; }
  }
}
:@has_childrenT:@options{ :@children[do:Sass::Tree::CommentNode
:
@type:silent:@value["V/* Foundation by ZURB
 * foundation.zurb.com
 * Licensed under MIT Open Source */;@;	[ :
@lineio:Sass::Tree::ImportNode:@imported_file0:@imported_filename"../functions;0;@;	[ ;i
o;

;;;["%/*
 * Foundation Variables
 * */;@;	[ ;io;

;;;["V/* Data attribute namespace
 * styles get applied to [data-mysite-plugin], etc */;@;	[ ;io:Sass::Tree::VariableNode:@guarded"!default:
@name"namespace:
@expro:Sass::Script::Bool;F;@;i;@;	[ ;io;;"!default;"experimental;o;;T;@;i;@;	[ ;io;

;;;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with browser-based text zoom or user-set defaults. */;@;	[ ;io;

;;;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it affect the grid breakpoints,
 * set $rem-base to $base-font-size and make sure $base-font-size is a px value. */;@;	[ ;io;;"!default;"base-font-size;o:Sass::Script::Number:@denominator_units[ :@numerator_units["%;ii:@original"	100%;@;i;@;	[ ;io;

;;;["B/* $base-line-height is 24px while $base-font-size is 16px */;@;	[ ;io;;"!default;"base-line-height;o;;[ ;["%;i;"	150%;@;i;@;	[ ;io;

;;;[")/*
 * Global Foundation Mixins
 * */;@;	[ ;i o;

;;;["j/* @mixins
 *
 * We use this to control border radius.
 * $radius - Default: $global-radius || 4px */;@;	[ ;i$o:Sass::Tree::MixinDefNode;"radius;T;@;	[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:@options{ :@underscored_name"radius:
@linei)0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei*0[o:Sass::Tree::PropNode;["-webkit-border-radius:@valueo; 	;"radius;@;"radius;	i+:@prop_syntax:new;@:
@tabsi :@children[ ;	i+o:Sass::Tree::PropNode;["border-radius:@valueo; 	;"radius;@;"radius;	i-:@prop_syntax:new;@:
@tabsi :@children[ ;	i-:@splat0;i(:
@args[[o:Sass::Script::Variable;"radius;@:@underscored_name"radiuso;	;"global-radius;@; "global_radius;i(o;

;;;["|/* @mixins
 *
 * We use this to create equal side border radius on elements.
 * $side - Options: left, right, top, bottom */;@;	[ ;i1o;;"side-radius;T;@;	[u;æ[o:Sass::Script::Operation
:@operator:or:@options{ :@operand2o; 
;:eq;@;	o:Sass::Script::String	:
@type:identifier:@value"
right;@:
@linei6;i6:@operand1o:Sass::Script::Variable	:
@name"	side;@:@underscored_name"	side;i6;i6;o; 
;;
;@;	o;	;;;"	left;@;i6;i6;o;	;"	side;@;"	side;i6u:Sass::Tree::IfNodeô[00[u:Sass::Tree::IfNode[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei@0[	o:Sass::Tree::PropNode;["-moz-border-radius-o; 	;"	side;@;"	side;	iA"	left:@valueo; 	;"radius;@;"radius;	iA:@prop_syntax:new;@:
@tabsi :@children[ ;	iAo;
;["-moz-border-radius-o; 	;"	side;@;"	side;	iB"
right;o; 	;"radius;@;"radius;	iB;;;@;i ;[ ;	iBo;
;["-webkit-border-o; 	;"	side;@;"	side;	iC"-left-radius;o; 	;"radius;@;"radius;	iC;;;@;i ;[ ;	iCo;
;["-webkit-border-o; 	;"	side;@;"	side;	iD"-right-radius;o; 	;"radius;@;"radius;	iD;;;@;i ;[ ;	iDo:Sass::Tree::PropNode:
@name["border-o:Sass::Script::Variable	;"	side:@options{ :@underscored_name"	side:
@lineiF"-left-radius:@valueo;	;"radius;	@;
"radius;iF:@prop_syntax:new;	@:
@tabsi :@children[ ;iFo;;["border-o;	;"	side;	@;
"	side;iG"-right-radius;o;	;"radius;	@;
"radius;iG;;;	@;i ;[ ;iG[u;}[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei70[	o:Sass::Tree::PropNode;["-moz-border-radius-bottomo; 	;"	side;@;"	side;	i8:@valueo; 	;"radius;@;"radius;	i8:@prop_syntax:new;@:
@tabsi :@children[ ;	i8o;
;["-moz-border-radius-topo; 	;"	side;@;"	side;	i9;o; 	;"radius;@;"radius;	i9;;;@;i ;[ ;	i9o;
;["-webkit-border-bottom-o; 	;"	side;@;"	side;	i:"-radius;o; 	;"radius;@;"radius;	i:;;;@;i ;[ ;	i:o;
;["-webkit-border-top-o; 	;"	side;@;"	side;	i;"-radius;o; 	;"radius;@;"radius;	i;;;;@;i ;[ ;	i;o:Sass::Tree::PropNode;["border-bottom-o;	;"	side;@;"	side;i="-radius;o;	;"radius;@;"radius;i=:@prop_syntax:new;@:
@tabsi :@children[ ;i=o;;["border-top-o;	;"	side;@;"	side;i>"-radius;o;	;"radius;@;"radius;i>;;;@;i ;[ ;i>;0;i5;[[o;;"	side;@; "	side0[o;;"radius;@; "radiuso;	;"global-radius;@; "global_radius;i5o;

;;;["~/* @mixins
 *
 * We can control whether or not we have inset shadows edges.
 * $active - Default: true, Options: false */;@;	[ ;iKo;;"inset-shadow;T;@;	[u;¬[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiP0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iQo; 	;"shiny-edge-color;@;"shiny_edge_color;	iQo:Sass::Script::String	:
@type:identifier;"
inset;@;	iQ;@:@separator:
space;	iQ:@prop_syntax:new;@:
@tabsi :@children[ ;	iQo:Sass::Tree::PropNode;["box-shadow;o:Sass::Script::List	;[o;	;"shiny-edge-size;@; "shiny_edge_size;iSo;	;"shiny-edge-color;@; "shiny_edge_color;iSo:Sass::Script::String	;:identifier;"
inset;@;iS;@:@separator:
space;iS:@prop_syntax:new;@:
@tabsi ;	[ ;iSu;ò[o:Sass::Script::Variable	:
@name"active:@options{ :@underscored_name"active:
@lineiU0[o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Parent:@filename" ;	iUo:Sass::Selector::Pseudo
;["active:	@arg0;@;	iU:@syntactic_type:
class:@sourceso:Set:
@hash{ ;@;	iU:@subject0;@;	iU:@has_childrenT;@:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiV0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iWo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iWo:Sass::Script::String	:
@type:identifier;"
inset;@;	iW;@:@separator:
space;	iW:@prop_syntax:new;@:
@tabsi :@children[ ;	iWo:Sass::Tree::PropNode;["box-shadow:@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iYo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iYo:Sass::Script::String	:
@type:identifier;"
inset;@;	iY;@:@separator:
space;	iY:@prop_syntax:new;@;i ;[ ;	iY;	iU:
@rule["&:active;0;iO;[[o;;"active;@; "activeo;;T;@;iOo;

;;;[")/* @mixins
 *
 * We use this to add transitions to elements
 * $property - Default: all, Options: http://www.w3.org/TR/css3-transitions/#animatable-properties
 * $speed - Default: 300ms
 * $ease - Default:ease-out, Options: http://css-tricks.com/almanac/properties/t/transition-timing-function/ */;@;	[ ;i\o;;"single-transition;T;@;	[u;	[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineic0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo:Sass::Script::List	;[o; 	;"property;@;"property;	ido; 	;"
speed;@;"
speed;	ido; 	;"	ease;@;"	ease;	id;@:@separator:
space;	id:@prop_syntax:new;@:
@tabsi :@children[ ;	ido;
;["-moz-transition;o;	;[o; 	;"property;@;"property;	ieo; 	;"
speed;@;"
speed;	ieo; 	;"	ease;@;"	ease;	ie;@;;;	ie;;;@;i ;[ ;	ieo;!;["transition;o;"	;[o;	;"property;@; "property;igo;	;"
speed;@; "
speed;igo;	;"	ease;@; "	ease;ig;@;%;&;ig;';(;@;)i ;	[ ;ig;0;ib;[[o;;"property;@; "propertyo;#	;;$;"all;@;ib[o;;"
speed;@; "
speedo;;[ ;["ms;i,;"
300ms;@;ib[o;;"	ease;@; "	easeo;#	;;$;"ease-out;@;ibo;

;;;["N/* @mixins
 *
 * We use this to add box-sizing across browser prefixes */;@;	[ ;ijo;;"box-sizing;T;@;	[u;<[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linein0[o:Sass::Tree::PropNode;["-moz-box-sizing:@valueo; 	;"	type;@;"	type;	io:@prop_syntax:new;@:
@tabsi :@children[ ;	ioo;
;["-webkit-box-sizing;o; 	;"	type;@;"	type;	ip;;;@;i ;[ ;	ipo;!;["box-sizing;o;	;"	type;@; "	type;ir;';(;@;)i ;	[ ;ir;0;im;[[o;;"	type;@; "	typeo;#	;;$;"border-box;@;imo;

;;;["M/* @mixins
 *
 * We use this to create equilateral triangles
 * $triangle-size - Used to set border-size. No default, set a px or em size.
 * $triangle-color - Used to set border-color which makes up triangle. No default
 * $triangle-direction - Used to determine which direction triangle points. Options: top, bottom, left, right */;@;	[ ;iuo;;"css-triangle;T;@;	[o;!;["content;o;#;;$;""";@;';(;@;)i ;	[ ;i|o;!;["display;o;#;;$;"
block;@;';(;@;)i ;	[ ;i}o;!;["
width;o;#;;$;"0;@;';(;@;)i ;	[ ;i~o;!;["height;o;#;;$;"0;@;';(;@;)i ;	[ ;io;!;["border;o;"	;[o;#	;;$;"
inset;@;i{o;	;"triangle-size;@; "triangle_size;i{;@;%;&;i{;';(;@;)i ;	[ ;i{u;n[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@:
@linei|;i|:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;i|0[o:Sass::Tree::PropNode;["border-color;o:Sass::Script::List	;[	o;	;"triangle-color;@;"triangle_color;i}o;
	;;;"transparent;@;i}o;
	;;;"transparent;@;i}o;
	;;;"transparent;@;i};@:@separator:
space;i}:@prop_syntax:new;@:
@tabsi :@children[ ;i}o;;["border-top-style;o;
;;;"
solid;@;;;@;i ;[ ;i~u;t[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@:
@linei;i:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;i0[o:Sass::Tree::PropNode;["border-color;o:Sass::Script::List	;[	o;
	;;;"transparent;@;io;
	;;;"transparent;@;io;	;"triangle-color;@;"triangle_color;io;
	;;;"transparent;@;i;@:@separator:
space;i:@prop_syntax:new;@:
@tabsi :@children[ ;io;;["border-bottom-style;o;
;;;"
solid;@;;;@;i ;[ ;iu;p[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@:
@linei;i:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;i0[o:Sass::Tree::PropNode;["border-color;o:Sass::Script::List	;[	o;
	;;;"transparent;@;io;
	;;;"transparent;@;io;
	;;;"transparent;@;io;	;"triangle-color;@;"triangle_color;i;@:@separator:
space;i:@prop_syntax:new;@:
@tabsi :@children[ ;io;;["border-left-style;o;
;;;"
solid;@;;;@;i ;[ ;iu;r[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@:
@linei;i:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;i0[o:Sass::Tree::PropNode;["border-color;o:Sass::Script::List	;[	o;
	;;;"transparent;@;io;	;"triangle-color;@;"triangle_color;io;
	;;;"transparent;@;io;
	;;;"transparent;@;i;@:@separator:
space;i:@prop_syntax:new;@:
@tabsi :@children[ ;io;;["border-right-style;o;
;;;"
solid;@;;;@;i ;[ ;i;0;i{;[[o;;"triangle-size;@; "triangle_size0[o;;"triangle-color;@; "triangle_color0[o;;"triangle-direction;@; "triangle_direction0o;

;;;[")/* We use this to do clear floats */;@;	[ ;io;;"clearfix;T;@;	[o;!;["
*zoom;o;#;;$;"1;@;';(;@;)i ;	[ ;io:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;-[o:#Sass::Selector::SimpleSequence
;-[o:Sass::Selector::Parent:@filename" ;io:Sass::Selector::Pseudo
;["before:	@arg0;1@;i:@syntactic_type:
class:@sourceso:Set:
@hash{ ;1@;i:@subject0o;.;-[o;/
;-[o;0;1@;io;2
;["
after;30;1@;i;4;5;6o;7;8{ ;1@;i;90;1@;i;T;@;)i ;	[o;!;["content;o;#;;$;"" ";@;';(;@;)i ;	[ ;io;!;["display;o;#;;$;"
table;@;';(;@;)i ;	[ ;i;i:
@rule["&:before, &:aftero;*;+o;,;-[o;.;-[o;/
;-[o;0;1" ;io;2
;["
after;30;1@:;i;4;5;6o;7;8{ ;1@:;i;90;1@:;i;T;@;)i ;	[o;!;["
clear;o;#;;$;"	both;@;';(;@;)i ;	[ ;i;i;:["&:after;0;i;[ o;

;;;["/* @mixins
 *
 * We use this to add a glowing effect to block elements
 * $selector - Used for selector state. Default: focus, Options: hover, active, visited
 * $fade-time - Default: 300ms
 * $glowing-effect-color - Default: fade-out($primary-color, .25) */;@;	[ ;io;;"block-glowing-effect;T;@;	[u;7[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo:Sass::Script::List	;[o;	;[o:Sass::Script::String	:
@type:identifier;"-webkit-box-shadow;@;	io; 	;"fade-time;@;"fade_time;	i;@:@separator:
space;	io;	;[o;	;;;"border-color;@;	io; 	;"fade-time;@;"fade_time;	io;	;;;"ease-in-out;@;	i;@;;;	i;@;:
comma;	i:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;["-moz-transition;o;	;[o;	;[o;	;;;"-moz-box-shadow;@;	io; 	;"fade-time;@;"fade_time;	i;@;;;	io;	;[o;	;;;"border-color;@;	io; 	;"fade-time;@;"fade_time;	io;	;;;"ease-in-out;@;	i;@;;;	i;@;;;	i;;;@;i ;[ ;	io;!;["transition;o;"	;[o;"	;[o;#	;;$;"box-shadow;@;i o;	;"fade-time;@; "fade_time;i ;@;%;&;i o;"	;[o;#	;;$;"border-color;@;i o;	;"fade-time;@; "fade_time;i o;#	;;$;"ease-in-out;@;i ;@;%;&;i ;@;%:
comma;i ;';(;@;)i ;	[ ;i o;*;T;@;)i ;	[u;Ë[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei£0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	;[	o:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;i :@original"0;@;	i¤o;;@;[ ;i ;"0;@;	i¤o;;[ ;["px;i
;"5px;@;	i¤o; 	;"glowing-effect-color;@;"glowing_effect_color;	i¤;@:@separator:
space;	i¤:@prop_syntax:new;@:
@tabsi :@children[ ;	i¤o;
;["-moz-box-shadow;o;	;[	o;;@;[ ;i ;"0;@;	i¥o;;@;[ ;i ;"0;@;	i¥o;;[ ;["px;i
;"5px;@;	i¥o; 	;"glowing-effect-color;@;"glowing_effect_color;	i¥;@;;;	i¥;;;@;i ;[ ;	i¥o;!;["box-shadow;o;"	;[	o;;[ ;[ ;i ;"0;@;i§o;;@q;[ ;i ;"0;@;i§o;;[ ;["px;i
;"5px;@;i§o;	;"glowing-effect-color;@; "glowing_effect_color;i§;@;%;&;i§;';(;@;)i ;	[ ;i§o;!;["border-color;o;	;"glowing-effect-color;@; "glowing_effect_color;i¨;';(;@;)i ;	[ ;i¨;i¢;:["&:o;	;"selector;@; "selector;i¢;0;i;[[o;;"selector;@; "selectoro;#	;;$;"
focus;@;i[o;;"fade-time;@; "fade_timeo;;[ ;["ms;i,;"
300ms;@;i[o;;"glowing-effect-color;@; "glowing_effect_coloro:Sass::Script::Funcall;"fade-out:@keywords{ ;@;0;i;[o;	;"primary-color;@; "primary_color;io;;@q;[ ;f	0.25;"	0.25;@;io;

;;;["t/* @mixins
 *
 * We use this to translate elements in 2D
 * $horizontal: Default: 0
 * $vertical: Default: 0 */;@;	[ ;i¬o;;"translate2d;T;@;	[u;U[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei²0[	o:Sass::Tree::PropNode;["-webkit-transform:@valueo:Sass::Script::Funcall;"translate:@keywords{ ;@:@splat0;	i³:
@args[o; 	;"horizontal;@;"horizontal;	i³o; 	;"vertical;@;"vertical;	i³:@prop_syntax:new;@:
@tabsi :@children[ ;	i³o;
;["-moz-transform;o;;"translate;{ ;@;0;	i´;[o; 	;"horizontal;@;"horizontal;	i´o; 	;"vertical;@;"vertical;	i´;;;@;i ;[ ;	i´o;
;["-ms-transform;o;;"translate;{ ;@;0;	iµ;[o; 	;"horizontal;@;"horizontal;	iµo; 	;"vertical;@;"vertical;	iµ;;;@;i ;[ ;	iµo;
;["-o-transform;o;;"translate;{ ;@;0;	i¶;[o; 	;"horizontal;@;"horizontal;	i¶o; 	;"vertical;@;"vertical;	i¶;;;@;i ;[ ;	i¶o;!;["transform;o;<;"translate;={ ;@;0;i¸;[o;	;"horizontal;@; "horizontal;i¸o;	;"vertical;@; "vertical;i¸;';(;@;)i ;	[ ;i¹;0;i±;[[o;;"horizontal;@; "horizontalo;;@q;[ ;i ;"0;@;i±[o;;"vertical;@; "verticalo;;@q;[ ;i ;"0;@;i±o;

;;;["/* @mixins
 *
 * Makes an element visually hidden, but accessible.
 * @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility */;@;	[ ;i»o;;"element-invisible;T;@;	[
o;!;["position;o;#;;$;"absolute !important;@;';(;@;)i ;	[ ;iÀo;!;["height;o;#;;$;"1px;@;';(;@;)i ;	[ ;iÁo;!;["
width;o;#;;$;"1px;@;';(;@;)i ;	[ ;iÂo;!;["overflow;o;#;;$;"hidden;@;';(;@;)i ;	[ ;iÃo;!;["	clip;o;<;"	rect;={ ;@;0;iÄ;[	o;;[ ;["px;i;"1px;@;iÄo;;[ ;["px;i;"1px;@;iÄo;;[ ;["px;i;"1px;@;iÄo;;[ ;["px;i;"1px;@;iÄ;';(;@;)i ;	[ ;iÄ;0;i¿;[ o;

;;;["@/* @mixins
 *
 * Turns off the element-invisible effect. */;@;	[ ;iÇo;;"element-invisible-off;T;@;	[
o;!;["position;o;#;;$;"static !important;@;';(;@;)i ;	[ ;iËo;!;["height;o;#;;$;"	auto;@;';(;@;)i ;	[ ;iÌo;!;["
width;o;#;;$;"	auto;@;';(;@;)i ;	[ ;iÍo;!;["overflow;o;#;;$;"visible;@;';(;@;)i ;	[ ;iÎo;!;["	clip;o;#;;$;"	auto;@;';(;@;)i ;	[ ;iÏ;0;iÊ;[ o;

;;;["8/* We use these to control various global styles */;@;	[ ;iÒo;;"!default;"body-bg;o:Sass::Script::Color	:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;0;@;iÓ;@;	[ ;iÓo;;"!default;"body-font-color;o;>	;?{	;@i';Ai;Bi';Ci';0;@;iÔ;@;	[ ;iÔo;;"!default;"body-font-family;o;"	;[
o;#	;:string;"Helvetica Neue;@;iÕo;#	;;D;"Helvetica;@;iÕo;#	;;$;"Helvetica;@;iÕo;#	;;$;"
Arial;@;iÕo;#	;;$;"sans-serif;@;iÕ;@;%;;;iÕ;@;	[ ;iÕo;;"!default;"body-font-weight;o;#	;;$;"normal;@;iÖ;@;	[ ;iÖo;;"!default;"body-font-style;o;#	;;$;"normal;@;i×;@;	[ ;i×o;

;;;["0/* We use this to control font-smoothing */;@;	[ ;iÙo;;"!default;"font-smoothing;o;#	;;$;"antialiased;@;iÚ;@;	[ ;iÚo;

;;;[":/* We use these to control text direction settings */;@;	[ ;iÜo;;"!default;"text-direction;o;#	;;$;"ltr;@;iÝ;@;	[ ;iÝo;;"!default;"default-float;o;#	;;$;"	left;@;iÞ;@;	[ ;iÞo;;"!default;"opposite-direction;o;#	;;$;"
right;@;iß;@;	[ ;ißu;¼[o:Sass::Script::Operation
:@operator:eq:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"ltr;@:
@lineià;ià:@operand1o:Sass::Script::Variable	:
@name"text-direction;@:@underscored_name"text_direction;iàu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:@guarded0:
@name"default-float:
@expro:Sass::Script::String	:
@type:identifier:@value"
right:@options{ :
@lineiä;@:@children[ ;iäo; ;0;"opposite-direction;o;		;
;;"	left;@;iå;@;[ ;iå[o:Sass::Tree::VariableNode:@guarded0;"default-float:
@expro;
	;;;"	left;@;iá;@:@children[ ;iáo;;0;"opposite-direction;o;
	;;;"
right;@;iâ;@;[ ;iâo;

;;;["4/* We use these as default colors throughout */;@;	[ ;iço;;"!default;"primary-color;o;>	;?{	;@i ;Ai;Bi;Ciº;0;@;iè;@;	[ ;ièo;;"!default;"secondary-color;o;>	;?{	;@iç;Ai;Biç;Ciç;0;@;ié;@;	[ ;iéo;;"!default;"alert-color;o;>	;?{	;@ið;Ai;BiF;Ci);0;@;iê;@;	[ ;iêo;;"!default;"success-color;o;>	;?{	;@iH;Ai;Bi¬;Cio;0;@;ië;@;	[ ;iëo;;"!default;"warning-color;o;>	;?{	;@ið;Ai;Bi;Ci);0;@;iì;@;	[ ;iìo;;"!default;"info-color;o;>	;?{	;@i ;Ai;BiÓ;Ciè;0;@;ií;@;	[ ;iío;

;;;["W/* We use these to make sure border radius matches unless we want it different. */;@;	[ ;iïo;;"!default;"global-radius;o;;[ ;["px;i;"3px;@;ið;@;	[ ;iðo;;"!default;"global-rounded;o;;[ ;["px;iè;"1000px;@;iñ;@;	[ ;iño;

;;;["L/* We use these to control inset shadow shiny edges and depressions. */;@;	[ ;ióo;;"!default;"shiny-edge-size;o;"	;[o;;@q;[ ;i ;"0;@;iôo;;[ ;["px;i;"1px;@;iôo;;@q;[ ;i ;"0;@;iô;@;%;&;iô;@;	[ ;iôo;;"!default;"shiny-edge-color;o;<;"	rgba;={ ;@;0;iõ;[o;>	;?{	;@iÿ;Ai;Biÿ;Ciÿ;0;@;iõo;;@q;[ ;f0.5;"0.5;@;iõ;@;	[ ;iõo;;"!default;"shiny-edge-active-color;o;<;"	rgba;={ ;@;0;iö;[o;>	;?{	;@i ;Ai;Bi ;Ci ;0;@;iöo;;@q;[ ;f0.20000000000000001 ;"0.2;@;iö;@;	[ ;iöo;

;;;["[/* We use this to control whether or not CSS classes come through in the gem files. */;@;	[ ;iøo;;"!default;"include-html-classes;o;;T;@;iù;@;	[ ;iùo;;"!default;"include-print-styles;o;;T;@;iú;@;	[ ;iúo;;"!default;" include-html-global-classes;o;	;"include-html-classes;@; "include_html_classes;iû;@;	[ ;iûo;

;;;["/* Media Query Ranges */;@;	[ ;iþo;;"!default;"small-range;o;"	;[o;
;[ ;["em;i ;@;iÿo;;[ ;["em;i-;"	40em;@;iÿ;@;%;;;iÿ;@;	[ ;iÿo;;"!default;"medium-range;o;"	;[o;
;[ ;["em;f40.063000000000002 Òò;@;i o;;[ ;["em;iE;"	64em;@;i ;@;%;;;i ;@;	[ ;i o;;"!default;"large-range;o;"	;[o;
;[ ;["em;f64.063000000000002 éy;@;io;;[ ;["em;i_;"	90em;@;i;@;%;;;i;@;	[ ;io;;"!default;"xlarge-range;o;"	;[o;
;[ ;["em;f90.063000000000002 éy;@;io;;[ ;["em;i};"
120em;@;i;@;%;;;i;@;	[ ;io;;"!default;"xxlarge-range;o;"	;[o;
;[ ;["em;f120.063 éy;@;io;;[ ;["em;iÿàõ;"99999999em;@;i;@;%;;;i;@;	[ ;io;;"!default;"screen;o;#	;;D;"only screen;@;i;@;	[ ;io;;"!default;"landscape;o:&Sass::Script::StringInterpolation
:@beforeo;#	;;D;" ;@;i:@aftero;#	;;D;"" and (orientation: landscape);@;i;@:	@mido;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"portrait;o;E
;Fo;#	;;D;" ;@;i	;Go;#	;;D;"! and (orientation: portrait);@;i	;@;Ho;	;"screen;@; "screen;i	;i	;@;	[ ;i	o;;"!default;"small-up;o;	;"screen;@; "screen;i;@;	[ ;io;;"!default;"small-only;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (max-width: ;@;i;Go;#	;;D;");@;i;@;Ho;<;"upper-bound;={ ;@;0;i;[o;	;"small-range;@; "small_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"medium-up;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"medium-range;@; "medium_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"medium-only;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;E
;Fo;#	;;D;") and (max-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"upper-bound;={ ;@;0;i;[o;	;"medium-range;@; "medium_range;i;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"medium-range;@; "medium_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"large-up;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"large-range;@; "large_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"large-only;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;E
;Fo;#	;;D;") and (max-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"upper-bound;={ ;@;0;i;[o;	;"large-range;@; "large_range;i;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"large-range;@; "large_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"xlarge-up;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"xlarge-range;@; "xlarge_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"xlarge-only;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;E
;Fo;#	;;D;") and (max-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"upper-bound;={ ;@;0;i;[o;	;"xlarge-range;@; "xlarge_range;i;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"xlarge-range;@; "xlarge_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"xxlarge-up;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"xxlarge-range;@; "xxlarge_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;;"!default;"xxlarge-only;o;E
;Fo;#	;;D;" ;@;i;Go;E
;Fo;#	;;D;" and (min-width:;@;i;Go;E
;Fo;#	;;D;") and (max-width:;@;i;Go;#	;;D;");@;i;@;Ho;<;"upper-bound;={ ;@;0;i;[o;	;"xxlarge-range;@; "xxlarge_range;i;i;@;Ho;<;"lower-bound;={ ;@;0;i;[o;	;"xxlarge-range;@; "xxlarge_range;i;i;@;Ho;	;"screen;@; "screen;i;i;@;	[ ;io;

;;;["/* Legacy */;@;	[ ;io;;0;"
small;o;	;"medium-up;@; "medium_up;i;@;	[ ;io;;0;"medium;o;	;"medium-up;@; "medium_up;i;@;	[ ;io;;0;"
large;o;	;"large-up;@; "large_up;i;@;	[ ;io;

;;;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;@;	[ ;i o;;"!default;"cursor-crosshair-value;o;#	;;$;"crosshair;@;i!;@;	[ ;i!o;;"!default;"cursor-default-value;o;#	;;$;"default;@;i";@;	[ ;i"o;;"!default;"cursor-pointer-value;o;#	;;$;"pointer;@;i#;@;	[ ;i#o;;"!default;"cursor-help-value;o;#	;;$;"	help;@;i$;@;	[ ;i$o;;"!default;"cursor-text-value;o;#	;;$;"	text;@;i%;@;	[ ;i%o:Sass::Tree::MixinNode;"exports;={ ;T;@;	[u;Ú'[o:Sass::Script::Variable	:
@name" include-html-global-classes:@options{ :@underscored_name" include_html_global_classes:
@linei*0['o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Element	:@namespace0;["	meta:@filename" ;	i,o:Sass::Selector::Class;["foundation-version;@;	i,:@sourceso:Set:
@hash{ ;@;	i,:@subject0;@;	i,:@has_childrenT;@:
@tabsi :@children[o:Sass::Tree::PropNode;["font-family:@valueo:Sass::Script::String:
@type:identifier;""/5.2.0/";@:@prop_syntax:new;@;i ;[ ;	i-;	i,:
@rule["meta.foundation-versiono:Sass::Tree::CommentNode
;:silent;["/* Used to provide media query values for javascript components.
 * Forward slash placed around everything to convince PhantomJS to read the value. */;@;[ ;	i/o;
;o;;[o;;[o;
;[o;	;0;["	meta;" ;	i1o;;["foundation-mq-small;@2;	i1;o;;{ ;@2;	i1;0;@2;	i1;T;@;i ;[o;;["font-family;o:Sass::Script::Operation
:@operator:	plus;@:@operand2o;	;:string;"/;@;	i2;	i2:@operand1o;%
;&;';@;(o:Sass::Script::Funcall;"unquote:@keywords{ ;@:@splat0;	i2:
@args[o; 	;"small-only;@;"small_only;	i2;	i2;*o;	;;);"/;@;	i2; ;!;@;i ;[ ;	i2o;;["
width;o;+;"lower-bound;,{ ;@;-0;	i3;.[o; 	;"small-range;@;"small_range;	i3; ;!;@;i ;[ ;	i3;	i1;"["meta.foundation-mq-smallo;
;o;;[o;;[o;
;[o;	;0;["	meta;" ;	i6o;;["foundation-mq-medium;@a;	i6;o;;{ ;@a;	i6;0;@a;	i6;T;@;i ;[o;;["font-family;o;%
;&;';@;(o;	;;);"/;@;	i7;	i7;*o;%
;&;';@;(o;+;"unquote;,{ ;@;-0;	i7;.[o; 	;"medium-up;@;"medium_up;	i7;	i7;*o;	;;);"/;@;	i7; ;!;@;i ;[ ;	i7o;;["
width;o;+;"lower-bound;,{ ;@;-0;	i8;.[o; 	;"medium-range;@;"medium_range;	i8; ;!;@;i ;[ ;	i8;	i6;"["meta.foundation-mq-mediumo;
;o;;[o;;[o;
;[o;	;0;["	meta;" ;	i;o;;["foundation-mq-large;@;	i;;o;;{ ;@;	i;;0;@;	i;;T;@;i ;[o;;["font-family;o;%
;&;';@;(o;	;;);"/;@;	i<;	i<;*o;%
;&;';@;(o;+;"unquote;,{ ;@;-0;	i<;.[o; 	;"large-up;@;"large_up;	i<;	i<;*o;	;;);"/;@;	i<; ;!;@;i ;[ ;	i<o;;["
width;o;+;"lower-bound;,{ ;@;-0;	i=;.[o; 	;"large-range;@;"large_range;	i=; ;!;@;i ;[ ;	i=;	i;;"["meta.foundation-mq-largeo;
;o;;[o;;[o;
;[o;	;0;["	meta;" ;	i@o;;["foundation-mq-xlarge;@º;	i@;o;;{ ;@º;	i@;0;@º;	i@;T;@;i ;[o;;["font-family;o;%
;&;';@;(o;	;;);"/;@;	iA;	iA;*o;%
;&;';@;(o;+;"unquote;,{ ;@;-0;	iA;.[o; 	;"xlarge-up;@;"xlarge_up;	iA;	iA;*o;	;;);"/;@;	iA; ;!;@;i ;[ ;	iAo;;["
width;o;+;"lower-bound;,{ ;@;-0;	iB;.[o; 	;"xlarge-range;@;"xlarge_range;	iB; ;!;@;i ;[ ;	iB;	i@;"["meta.foundation-mq-xlargeo;
;o;;[o;;[o;
;[o;	;0;["	meta;" ;	iEo;;["foundation-mq-xxlarge;@é;	iE;o;;{ ;@é;	iE;0;@é;	iE;T;@;i ;[o;;["font-family;o;%
;&;';@;(o;	;;);"/;@;	iF;	iF;*o;%
;&;';@;(o;+;"unquote;,{ ;@;-0;	iF;.[o; 	;"xxlarge-up;@;"xxlarge_up;	iF;	iF;*o;	;;);"/;@;	iF; ;!;@;i ;[ ;	iFo;;["
width;o;+;"lower-bound;,{ ;@;-0;	iG;.[o; 	;"xxlarge-range;@;"xxlarge_range;	iG; ;!;@;i ;[ ;	iG;	iE;"["meta.foundation-mq-xxlargeo;
;o;;[o;;[o;
;[o;	;0;["	meta;" ;	iJo;;["(foundation-data-attribute-namespace;@;	iJ;o;;{ ;@;	iJ;0;@;	iJ;T;@;i ;[o;;["font-family;o: Sass::Script::Interpolation:@before0:@whitespace_beforei):@after0;@:@originally_textF:	@mido; 	;"namespace;@;"namespace;	iK;	iK:@whitespace_after0; ;!;@;i ;[ ;	iK;	iJ;"["-meta.foundation-data-attribute-namespaceo;#
;;$;["./* Must be 100% for off canvas to work */;@;[ ;	iNo;
;o;;[o;;[o;
;[o;	;0;["	html;" ;	iO;o;;{ ;@7;	iO;0o;;[o;
;[o;	;0;["	body;@7;	iO;o;;{ ;@7;	iO;0;@7;	iO;T;@;i ;[o;;["height;o;;;;"	100%;@; ;!;@;i ;[ ;	iO;	iO;"["html, bodyo;#
;;$;["F/* Set box-sizing globally to handle padding and border widths */;@;[ ;	iQo;
;o;;[o;;[o;
;[o:Sass::Selector::Universal;0;" ;	iT;o;;{ ;@X;	iT;0o;;["
o;
;[o;6;0;@X;	iTo:Sass::Selector::Pseudo
;["before:	@arg0;@X;	iT:@syntactic_type:
class;o;;{ ;@X;	iT;0o;;["
o;
;[o;6;0;@X;	iTo;7
;["
after;80;@X;	iT;9;:;o;;{ ;@X;	iT;0;@X;	iT;T;@;i ;[o:Sass::Tree::MixinNode;"box-sizing;,{ ;@;[ ;-0;	iU;.[o;	;;;"border-box;@;	iU;	iT;"["!*,
    *:before,
    *:aftero;
;o;;[o;;[o;
;[o;	;0;["	html;" ;	iY;o;;{ ;@;	iY;0o;;["
o;
;[o;	;0;["	body;@;	iY;o;;{ ;@;	iY;0;@;	iY;T;@;i ;[o;;["font-size;o; 	;"base-font-size;@;"base_font_size;	iY; ;!;@;i ;[ ;	iY;	iY;"["html,
    bodyo;#
;;$;["/* Default body styles */;@;[ ;	i[o;
;o;;[o;;[o;
;[o;	;0;["	body;" ;	i\;o;;{ ;@ª;	i\;0;@ª;	i\;T;@;i ;[o;;["background;o; 	;"body-bg;@;"body_bg;	i]; ;!;@;i ;[ ;	i]o;;["
color;o; 	;"body-font-color;@;"body_font_color;	i^; ;!;@;i ;[ ;	i^o;;["padding;o;;;;"0;@; ;!;@;i ;[ ;	i_o;;["margin;o;;;;"0;@; ;!;@;i ;[ ;	i`o;;["font-family;o; 	;"body-font-family;@;"body_font_family;	ia; ;!;@;i ;[ ;	iao;;["font-weight;o; 	;"body-font-weight;@;"body_font_weight;	ib; ;!;@;i ;[ ;	ibo;;["font-style;o; 	;"body-font-style;@;"body_font_style;	ic; ;!;@;i ;[ ;	ico;;["line-height;o;;;;"1;@; ;!;@;i ;[ ;	ido;#
;;$;["F/* Set to $base-line-height to take on browser default of 150% */;@;[ ;	ido;;["position;o;;;;"relative;@; ;!;@;i ;[ ;	ieo;;["cursor;o; 	;"cursor-default-value;@;"cursor_default_value;	if; ;!;@;i ;[ ;	if;	i\;"["	bodyo;
;o;;[o;;[o;
;[o;	;0;["a;" ;	iio;7
;["
hover;80;@ ;	ii;9;:;o;;{ ;@ ;	ii;0;@ ;	ii;T;@;i ;[o;;["cursor;o; 	;"cursor-pointer-value;@;"cursor_pointer_value;	ii; ;!;@;i ;[ ;	ii;	ii;"["a:hovero;#
;;$;["B/* Grid Defaults to get images and embeds to work properly */;@;[ ;	iko;
;o;;[o;;[o;
;[o;	;0;["img;" ;	il;o;;{ ;@;	il;0;@;	il;T;@;i ;[o;;["max-width;o;;;;"	100%;@; ;!;@;i ;[ ;	ilo;;["height;o;;;;"	auto;@; ;!;@;i ;[ ;	il;	il;"["imgo;
;o;;[o;;[o;
;[o;	;0;["img;" ;	in;o;;{ ;@:;	in;0;@:;	in;T;@;i ;[o;;["-ms-interpolation-mode;o;;;;"bicubic;@; ;!;@;i ;[ ;	in;	in;"["imgo;
;o;;[o;;[o;
;[o:Sass::Selector::Id;["map_canvas;" ;	iq;o;;{ ;@P;	iq;0o;;["
o;
;[o;;["map_canvas;@P;	iq;o;;{ ;@P;	iq;0;@P;	iq;T;@;i ;[o;
;o;;[o;;[o;
;[o;	;0;["img;" ;	it;o;;{ ;@h;	it;0o;;["
o;
;[o;	;0;["
embed;@h;	it;o;;{ ;@h;	it;0o;;["
o;
;[o;	;0;["object;@h;	it;o;;{ ;@h;	it;0;@h;	it;T;@;i ;[o;;["max-width;o;;;;"none !important;@; ;!;@;i ;[ ;	it;	it;"["#img,
      embed,
      object;	iq;"["!#map_canvas,
    .map_canvaso;#
;;$;[",/* Miscellaneous useful HTML classes */;@;[ ;	ixo;
;o;;[o;;[o;
;[o;;["	left;" ;	iy;o;;{ ;@;	iy;0;@;	iy;T;@;i ;[o;;["
float;o;;;;"left !important;@; ;!;@;i ;[ ;	iy;	iy;"["
.lefto;
;o;;[o;;[o;
;[o;;["
right;" ;	iz;o;;{ ;@®;	iz;0;@®;	iz;T;@;i ;[o;;["
float;o;;;;"right !important;@; ;!;@;i ;[ ;	iz;	iz;"[".righto;
;o;;[o;;[o;
;[o;;["clearfix;" ;	i{;o;;{ ;@Ä;	i{;0;@Ä;	i{;T;@;i ;[o;;;"clearfix;,{ ;@;[ ;-0;	i{;.[ ;	i{;"[".clearfixo;
;o;;[o;;[o;
;[o;;["	hide;" ;	i|;o;;{ ;@Ù;	i|;0;@Ù;	i|;T;@;i ;[o;;["display;o;;;;"	none;@; ;!;@;i ;[ ;	i|;	i|;"["
.hideo;#
;;$;["ý/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers and Firefox 25 (and later) on the Mac. */;@;[ ;	i~o;
;o;;[o;;[o;
;[o;;["antialiased;" ;	i;o;;{ ;@ó;	i;0;@ó;	i;T;@;i ;[o;;["-webkit-font-smoothing;o;;;;"antialiased;@; ;!;@;i ;[ ;	io;;["-moz-osx-font-smoothing;o;;;;"grayscale;@; ;!;@;i ;[ ;	i;	i;"[".antialiasedo;#
;;$;["W/* Get rid of gap under images by making them display: inline-block; by default */;@;[ ;	io;
;o;;[o;;[o;
;[o;	;0;["img;" ;	i;o;;{ ;@;	i;0;@;	i;T;@;i ;[o;;["display;o;;;;"inline-block;@; ;!;@;i ;[ ;	io;;["vertical-align;o;;;;"middle;@; ;!;@;i ;[ ;	i;	i;"["imgo;#
;;$;["(/*
 * Global resets for forms
 * */;@;[ ;	io;#
;;$;[";/* Make sure textarea takes on height automatically */;@;[ ;	io;
;o;;[o;;[o;
;[o;	;0;["textarea;" ;	i;o;;{ ;@7;	i;0;@7;	i;T;@;i ;[o;;["height;o;;;;"	auto;@; ;!;@;i ;[ ;	io;;["min-height;o;;;;"	50px;@; ;!;@;i ;[ ;	i;	i;"["textareao;#
;;$;["5/* Make select elements 100% width by default */;@;[ ;	io;
;o;;[o;;[o;
;[o;	;0;["select;" ;	i;o;;{ ;@W;	i;0;@W;	i;T;@;i ;[o;;["
width;o;;;;"	100%;@; ;!;@;i ;[ ;	i;	i;"["select;0;i(;[o;#	;;D;"global;@;i(;i